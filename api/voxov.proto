syntax = "proto3";

option go_package = "github.com/c31io/voxov/api";

package voxov;

service VOxOV {
    // session
    rpc CreateSession (CreateSessionRequest) returns (CreateSessionReply);
    rpc UpdateSession (UpdateSessionRequest) returns (UpdateSessionReply);
    // authenticate
    rpc Authenticate (AuthenticateRequest) returns (AuthenticateReply);
    rpc WhoAmI (WhoAmIRequest) returns (WhoAmIReply);
    // device
    rpc CreateDevice(CreateDeviceRequest) returns (CreateDeviceReply);

    /* TODO
    rpc ReadDevice() returns ();
    rpc UpdateDevice() returns ();
    rpc DeleteDevice() returns ();
    rpc ListDevice() returns ();
    // pay
    rpc Pay () returns ();
    rpc Refund () returns ();
    // plan
    rpc CreatePlan() returns ();
    rpc ReadPlan() returns ();
    rpc UpdatePlan() returns ();
    rpc DeletePlan() returns ();
    rpc ListPlan() returns ();
    // meme
    rpc CreateMeme () returns ();
    rpc ReadMeme () returns ();
    rpc DeleteMeme () returns ();
    // gene
    rpc ExpressGene () returns ();
    rpc SilenceGene () returns ();
    // censor
    rpc RequestMark () returns ();
    rpc MarkMeme () returns ();
    */

    // TODO: staff
}

message CreateSessionRequest {
    int32 api_version = 1;
    int64 ttl = 2;
}

message CreateSessionReply {
    int32 api_version = 1;
    bytes token = 2;
}

message UpdateSessionRequest {
    bytes token = 1;
    int64 ttl = 2;
}

message UpdateSessionReply {
    bool ok = 1;
}

message AuthenticateRequest {
    bytes token = 1;
    int64 ttl = 2;
}

message AuthenticateReply {
    string tel = 1;
    string msg = 2;
}

message WhoAmIRequest {
    bytes token = 1;
}

message WhoAmIReply {
    int64 person = 1;
}

message CreateDeviceRequest {
    bytes token = 1;
    bytes dtoken = 2;
    string name = 3;
    string info = 4;
}

message CreateDeviceReply {
    bool ok = 1;
}
